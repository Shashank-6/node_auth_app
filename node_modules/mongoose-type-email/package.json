{
  "_args": [
    [
      {
        "raw": "mongoose-type-email",
        "scope": null,
        "escapedName": "mongoose-type-email",
        "name": "mongoose-type-email",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/shashank/wash_my_car"
    ]
  ],
  "_from": "mongoose-type-email",
  "_hasShrinkwrap": false,
  "_id": "mongoose-type-email@1.0.11",
  "_location": "/mongoose-type-email",
  "_nodeVersion": "11.13.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mongoose-type-email_1.0.11_1556056295313_0.16484723540272195"
  },
  "_npmUser": {
    "name": "konsumer",
    "email": "konsumer@jetboystudio.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mongoose-type-email",
    "scope": null,
    "escapedName": "mongoose-type-email",
    "name": "mongoose-type-email",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongoose-type-email/-/mongoose-type-email-1.0.11.tgz",
  "_shasum": "0d7ad1af2405623214fadebfcc8c528d342d4f24",
  "_shrinkwrap": null,
  "_spec": "mongoose-type-email",
  "_where": "/home/shashank/wash_my_car",
  "author": {
    "name": "David Konsumer",
    "email": "konsumer@jetboystudio.com"
  },
  "bugs": {
    "url": "https://github.com/konsumer/mongoose-type-email/issues"
  },
  "dependencies": {
    "cryptiles": "^4.1.2"
  },
  "description": "An email field-type for Mongoose schemas",
  "devDependencies": {
    "jest": "^24.7.1",
    "mockingoose": "^2.9.1",
    "mongoose": "^5.3.14",
    "release-it": "^8.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-m6TLGy9g5qK+7nCFbq673UzrwhZ6E3J2kLjN5pU50phFYx8HJaIeHLZ7oiuMQUMNxnFVon86TZH5Hg0Jpmatrg==",
    "shasum": "0d7ad1af2405623214fadebfcc8c528d342d4f24",
    "tarball": "https://registry.npmjs.org/mongoose-type-email/-/mongoose-type-email-1.0.11.tgz",
    "fileCount": 5,
    "unpackedSize": 6260,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcv4joCRA9TVsSAnZWagAAk5MP/1rCw2dKcy5kt711xqlc\nhTswkVEeZ/MEcKOSA0T1qGSIG40128XUBLF3ygiHzbdjE3tUsrMJ4uMzs+oi\nOMGDABXgu2K21tUTcjxmi2di42QViOfYcGdjI1XxFdCtv6efsX3EAjF8x8SN\nQYJpD5UMAVd+H6oMIyuFsePqKkAEOQmfO+SSOeVk0u9jEZYojPBgS3JINRHx\necMIfWgOnQNyKFcHZRXPVnZA2MY+InKNGRC7ODDg6drako+ZeK76ZlnEsnEz\n6VcT2Gup7+Hc6OFXit/tAVHJ7Nni5EZa9pcjxk2vk0KCG1qR7kKRiu5I6YQl\nMCrVFPsbiA3INN+ND3jAsiTzTmfJJATgiRS3sY2E4qBXQ91HseTQ5K1S34Vr\n4NXb+nfQaa7c4qbqX3LXn6qu9cCTBLXvoPbRvH+Xgvo5c1wRt/S8vGeMB/LV\nga0BXTvS2OcjqGliZONwVElX8YWZ6sswqs+ru4tcqIyefHNyvj78ODiFJquQ\nais/cUZp2LZtrID4no/bOnLESkKZfg2o3cj7Cd+UyeiL7nlGXoF94Uq5wehR\nnOFyIWeneputWthTACyTyWXNxK/VQDfqf4HbjgAZC9bQpCJl4kktZT6ByHvP\nCHmY8Hfvkl+SoAM7BUPdRdmO+LwBzpYKfvAaVqIBmbi3mCZgI+noeVGVqZZ1\noZaM\r\n=YhH3\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "3c9222ffc06ab06e30da1d77dcb73e4cd7b35998",
  "homepage": "https://github.com/konsumer/mongoose-type-email",
  "jest": {
    "testEnvironment": "node"
  },
  "keywords": [
    "mongoose",
    "types",
    "email",
    "schema"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "konsumer",
      "email": "konsumer@jetboystudio.com"
    }
  ],
  "name": "mongoose-type-email",
  "optionalDependencies": {},
  "peerDependencies": {
    "mongoose": "*"
  },
  "readme": "# mongoose-type-email\n\nAn email field-type for Mongoose schemas\n\n[![npm](https://nodei.co/npm/mongoose-type-email.png)](https://www.npmjs.com/package/mongoose-type-email)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/konsumer/mongoose-type-email.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/konsumer/mongoose-type-email.svg?branch=master)](https://travis-ci.org/konsumer/mongoose-type-email)\n[![Code Climate](https://codeclimate.com/github/konsumer/mongoose-type-email/badges/gpa.svg)](https://codeclimate.com/github/konsumer/mongoose-type-email)\n\n## usage\n\nThis will validate email, correctly:\n\n```js\nvar mongoose = require('mongoose');\nrequire('mongoose-type-email');\n\nvar UserSchema = new mongoose.Schema({\n    email: {\n        work: mongoose.SchemaTypes.Email,\n        home: mongoose.SchemaTypes.Email\n    }\n});\n```\n\nYou can also use the stuff in `String` type:\n\n```js\nvar UserSchema = new mongoose.Schema({\n    email: {\n        work: {type: mongoose.SchemaTypes.Email, required: true},\n        home: {type: mongoose.SchemaTypes.Email, required: true},\n    }\n});\n```\n\nYou can also use it as an array:\n\n\n```js\nvar UserSchema = new mongoose.Schema({\n    emails: [{type: mongoose.SchemaTypes.Email}]\n});\n```\n\nYou can add 'allowBlank: true' in order to allow empty string ('') when the field is not required\n\n```js\nvar mongoose = require('mongoose');\nrequire('mongoose-type-email');\n\nvar UserSchema = new mongoose.Schema({\n    email: {\n        work: { type: mongoose.SchemaTypes.Email, allowBlank: true }, // allows '' as a value\n        home: mongoose.SchemaTypes.Email // throws when the value is ''\n    }\n});\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/konsumer/mongoose-type-email.git"
  },
  "scripts": {
    "release": "release-it -p -n",
    "test": "jest"
  },
  "version": "1.0.11"
}
